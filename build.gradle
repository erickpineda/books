apply plugin: 'java'
apply plugin: 'eclipse'

// Declares binary plugin and its required JavaFX classpath
// url: http://dl.bintray.com/content/shemnon/javafx-gradle/0.4.0/javafx.plugin
apply from: 'javafx.plugin'

// Configures plugin
javafx {
    // Points to JDK and its JavaFX libraries, also declares target runtime JDK
    javaRuntime = '/Library/Java/JavaVirtualMachines/jdk1.7.0_40.jdk'
    
    // Application name and ID presented by target OS
    appID 'BooksApp'
    appName 'Books Application'
    
    // Main class of application
    mainClass 'net.erickpineda.Main'
    
    // JVM arguments, system properties, application command line arguments
    jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
    systemProperties = ['prism.disableRegionCaching':'true']
    arguments = ['-l', '--fast']

    // Keystore credentials for signing JAR
    // Generate key: keytool -genkey -alias release -keyalg RSA -keystore keystore.jks -keysize 2048
    releaseKey {
        alias = 'release'
        keyPass = getProjectProperty('keyStorePassword')
        keyStore = file("${System.properties['user.home']}/keystore/keystore.jks")
        storePass = getProjectProperty('storePassword')
    }
    
    signingMode 'release'
    
    // ...
}

String getProjectProperty(String propertyName) {
    project.hasProperty(propertyName) ? project.property(propertyName) : null
}

sourceCompatibility = 1.5
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
	compile 'org.controlsfx:controlsfx:8.20.8'
	compile 'com.h2database:h2:1.4.186'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
